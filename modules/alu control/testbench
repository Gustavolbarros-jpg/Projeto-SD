`timescale 1ns / 1ps
module tb_alu_control;
    reg [1:0] alu_op;
    reg [5:0] funct;
    wire [3:0] alu_control;

    // Instantiate the module
    alu_control uut (
        .alu_op(alu_op),
        .funct(funct),
        .alu_control(alu_control)
    );

    // Test stimulus
    initial begin
        $monitor("Time=%0t alu_op=%b funct=%b alu_control=%b", $time, alu_op, funct, alu_control);

        // Test 1: alu_op = 00, expect ADD (0010)
        alu_op = 2'b00;
        funct = 6'b000000;
        #10;
        // Expected: alu_control = 4'b0010

        // Test 2: alu_op = 01, expect SUB (0110)
        alu_op = 2'b01;
        #10;
        // Expected: alu_control = 4'b0110

        // Test 3: alu_op = 10, funct = ADD, expect ADD (0010)
        alu_op = 2'b10;
        funct = 6'b100000;
        #10;
        // Expected: alu_control = 4'b0010

        // Test 4: alu_op = 10, funct = SUB, expect SUB (0110)
        funct = 6'b100010;
        #10;
        // Expected: alu_control = 4'b0110

        // Test 5: alu_op = 10, funct = AND, expect AND (0000)
        funct = 6'b100100;
        #10;
        // Expected: alu_control = 4'b0000

        // Test 6: alu_op = 10, funct = OR, expect OR (0001)
        funct = 6'b100101;
        #10;
        // Expected: alu_control = 4'b0001

        // Test 7: alu_op = 10, funct = SLT, expect SLT (0111)
        funct = 6'b101010;
        #10;
        // Expected: alu_control = 4'b0111

        $finish;
    end
endmodule
