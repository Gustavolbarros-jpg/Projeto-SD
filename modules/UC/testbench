timescale 1ns / 1ps
module tb_control_unit;
    reg [5:0] opcode;
    wire reg_dst, alu_src, mem_to_reg, reg_write, mem_read, mem_write, branch;
    wire [1:0] alu_op;

    // Instantiate the module
    control_unit uut (
        .opcode(opcode),
        .reg_dst(reg_dst),
        .alu_src(alu_src),
        .mem_to_reg(mem_to_reg),
        .reg_write(reg_write),
        .mem_read(mem_read),
        .mem_write(mem_write),
        .branch(branch),
        .alu_op(alu_op)
    );

    // Test stimulus
    initial begin
        $monitor("Time=%0t opcode=%b reg_dst=%b alu_src=%b mem_to_reg=%b reg_write=%b mem_read=%b mem_write=%b branch=%b alu_op=%b",
                 $time, opcode, reg_dst, alu_src, mem_to_reg, reg_write, mem_read, mem_write, branch, alu_op);
        
        // Test 1: R-type, expect reg_dst=1, reg_write=1, alu_op=10
        opcode = 6'b000000;
        #10;
        // Expected: reg_dst=1, alu_src=0, mem_to_reg=0, reg_write=1, mem_read=0, mem_write=0, branch=0, alu_op=2'b10
        
        // Test 2: addi, expect alu_src=1, reg_write=1, alu_op=00
        opcode = 6'b001000;
        #10;
        // Expected: reg_dst=0, alu_src=1, mem_to_reg=0, reg_write=1, mem_read=0, mem_write=0, branch=0, alu_op=2'b00
        
        // Test 3: lw, expect alu_src=1, mem_to_reg=1, reg_write=1, mem_read=1
        opcode = 6'b100011;
        #10;
        // Expected: reg_dst=0, alu_src=1, mem_to_reg=1, reg_write=1, mem_read=1, mem_write=0, branch=0, alu_op=2'b00
        
        // Test 4: sw, expect alu_src=1, mem_write=1
        opcode = 6'b101011;
        #10;
        // Expected: reg_dst=0, alu_src=1, mem_to_reg=0, reg_write=0, mem_read=0, mem_write=1, branch=0, alu_op=2'b00
        
        // Test 5: beq, expect branch=1, alu_op=01
        opcode = 6'b000100;
        #10;
        // Expected: reg_dst=0, alu_src=0, mem_to_reg=0, reg_write=0, mem_read=0, mem_write=0, branch=1, alu_op=2'b01
        
        // Test 6: Invalid opcode, expect all control signals = 0
        opcode = 6'b111111;
        #10;
        // Expected: reg_dst=0, alu_src=0, mem_to_reg=0, reg_write=0, mem_read=0, mem_write=0, branch=0, alu_op=2'b00
        
        $finish;
    end
endmodule
